name: "Deploy Application"

on:
  workflow_dispatch:
    inputs:
      create-or-update-stack:
        type: choice
        description: 'update or create stack'
        required: true
        default: 'update-stack'
        options:
          - 'update-stack'
          - 'create-stack'
      build:
        type: boolean
        description: "Build image"
        default: true
      push:
        type: boolean
        description: "Push image"
        default: true
      deploy:
        type: boolean
        description: "Deploy image"
        default: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout the repo 
        uses: actions/checkout@v3
      
      - name: Upgrade AWS CLI version
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" 
          unzip awscliv2.zip
          sudo ./aws/install --bin-dir /usr/local/bin --install-dir /usr/local/aws-cli --update
          which aws
          aws --version

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: "us-east-1"

      - name: Get required variables
        run: |
          echo "HOST_IP"=$(aws cloudformation describe-stacks --stack-name api-infra --query "Stacks[0].Outputs[?OutputKey=='ElasticIP'].OutputValue" --output text) >> $GITHUB_ENV

          echo "ACC_ID"=$(aws sts get-caller-identity --query "Account" --output text) >> $GITHUB_ENV

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ACC_ID}.dkr.ecr.us-east-1.amazonaws.com

      - name: Build image
        if: ${{ github.event.inputs.build == 'true' }}
        run: |
          docker build ./apicallapp -t myapi:"${{ github.sha }}"
          docker tag myapi:"${{ github.sha }}" ${ACC_ID}.dkr.ecr.us-east-1.amazonaws.com/myapi:"${{ github.sha }}"
          docker tag myapi:"${{ github.sha }}" ${ACC_ID}.dkr.ecr.us-east-1.amazonaws.com/myapi:latest
      
      - name: Push Image
        if: ${{ github.event.inputs.push == 'true' }}
        run: |
          docker push --all-tags ${ACC_ID}.dkr.ecr.us-east-1.amazonaws.com/myapi
      
      - name: Deploy image
        if: ${{ github.event.inputs.deploy == 'true' }}
        run: |
          echo echo

      
